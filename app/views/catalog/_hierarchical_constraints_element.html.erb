<%- # local params:
    # label 
    # value
    # options =>
    #   :remove => url for a remove constraint link
    #   :classes => array of classes to add to container span
    options ||= {}
    options[:escape_label] = true unless options.has_key?(:escape_label)
    options[:escape_value] = true unless options.has_key?(:escape_value)
-%>

<span class="appliedFilter constraint <%= options[:classes].join(" ") if options[:classes] %>">
      <%- unless label.blank? -%>
        <span class="filterName"><%= options[:escape_label] ? h(label) : label %></span> 
      <%- end -%>

<%
uri = URI.parse(options[:remove])
query = Rack::Utils.parse_query(uri.query)
%>

      <% asdf = [] %>
      <% value.split("/").each do |v| %>
      <%- unless v.blank? -%>
      <%- unless options[:remove].blank? -%>
        <% accessible_remove_label =               
                if label.blank?
                  "Remove constraint #{options[:escape_value] ? h(v) : v}"
                else
                  "Remove constraint #{options[:escape_label] ? h(label) : label}: #{options[:escape_value] ? h(v) : v}"
                end              
        %>                

<% 

uri.query = query.merge({"f[merlot_s][]" => asdf.join("/")}).to_param

%>
        <span class="filterValue remove"><%= link_to((options[:escape_value] ? v : v.html_safe), options[:remove], :title => accessible_remove_label) %></span>
        <%- else -%>
        <span class="filterValue"><%= options[:escape_value] ? h(v) : v %></span>
      <%- end -%>
        <% asdf << v %>
      <%- end -%>
                 <% end %>

</span>

